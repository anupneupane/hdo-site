var HDO = HDO || {};

/*
  Usage example:

    <div class="hdo-issue-widget" height="500" width="20%" data-issue="161">Laster sak fra Holder de ord...</div>


    <script src="http://holderdeord.no/widgets"></script>
*/

HDO.widgets = (function () {
  this.host = '<%= request.host %>';
  this.baseUrl = '<%= request.scheme %>://<%= request.host %>:<%= request.port %>/';
  this.widgetCount = 0;

  window.addEventListener('message', function(e) {
    var data = e.data.split(':');
    var action = data[0];

    if (action == 'hdo-widget-size') {
      var iframe = findIframe(e.source);
      if (!iframe) { return }

      iframe.style.height = data[1];
      iframe.style.maxHeight = data[1];
    }
  }, false);

  function findIframe(target) {
		var iframes = document.getElementsByTagName('iframe');


		for(var i = 0, l = iframes.length; i<l; i++) {
			if(iframes[i].contentWindow === target) {
				return iframes[i];
			}
		}
  };

  function queryParamFor(key, value) {
    return key + '=' + encodeURIComponent(value);
  }

  function addIssueParams(el, url) {
    var issues = el.getAttribute('data-issue-ids');
    var count = el.getAttribute('data-issue-count');

    url += '?'

    if (issues && issues.length)
      url += queryParamFor('issues', issues);

    if (count && count.length)
      url += queryParamFor('count', count);

    return url;
  }

  function extractWidgetOptions(type, el) {
      var url;

      if (type == "issue") {
          url = baseUrl + "issues/" + el.getAttribute('data-issue-id') + '/widget';
      } else if (type == "representative") {
          url = baseUrl + "representatives/" + el.getAttribute('data-representative-id') + '/widget';
          url = addIssueParams(el, url);
      } else if (type == "party") {
          url = baseUrl + "parties/" + el.getAttribute('data-party-id') + '/widget';
          url = addIssueParams(el, url);
      } else if (type == "topic") {
          url = baseUrl + "widgets/topic?" + queryParamFor('issues', el.getAttribute('data-issues')) + '&' + queryParamFor('promises', el.getAttribute('data-promises'))
      } else {
          throw new Error('invalid HDO widget type: ' + type);
      }

      url = addOriginParam(url);

      return {
          'url': url,
          'height': el.getAttribute('height') || '500px',
          'width': el.getAttribute('width') || '100%'
      };
  }

  function addOriginParam (url) {
    if (url.indexOf('?') != -1) {
      url += '&' + queryParamFor('origin', location.href);
    } else {
      url += '?' + queryParamFor('origin', location.href);
    };


    return url;
  }

  function createWidgetFrame(type, element) {
      var opts = extractWidgetOptions(type, element),
          iframe = document.createElement('iframe');

      widgetCount++;

      iframe.id          = "hdo-widget-" + widgetCount;
      iframe.src         = opts.url;
      iframe.width       = opts.width;
      iframe.height      = opts.height;
      iframe.frameBorder = 0;
      iframe.scrolling   = 'no';
      iframe.title       = 'holderdeord.no widget';

      element.parentNode.replaceChild(iframe, element);
  }

  return {
      init: function (type) {
          var nodes = document.getElementsByClassName('hdo-' + type + '-widget');
          var elements = []

          for (var i = 0; i < nodes.length; i++) {
            elements.push(nodes[i]);
          }

          for (var i = 0; i < elements.length; i++) {
            createWidgetFrame(type, elements[i]);
          }


      }
  };
})();

HDO.widgets.init('topic');
HDO.widgets.init('issue');
HDO.widgets.init('representative');
HDO.widgets.init('party');
